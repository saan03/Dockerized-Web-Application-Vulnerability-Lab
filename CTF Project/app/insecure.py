from flask import Blueprint, render_template, request, redirect, url_for
import os
import subprocess

insecure_app = Blueprint('insecure', __name__) 
UPLOAD_FOLDER = 'uploads'
os.makedirs(UPLOAD_FOLDER, exist_ok=True)

@insecure_app.route('/')
def index():
    return render_template('insecure.html')

@insecure_app.route('/upload', methods=['POST'])
def upload():
    if 'file' not in request.files:
        return 'No file part'
    file = request.files['file']
    if file.filename == '':
        return 'No selected file'
    allowed_extensions = {'.sh', '.txt', '.jpg', '.png'}
    if file and any(file.filename.endswith(ext) for ext in allowed_extensions):
        filepath = os.path.join(UPLOAD_FOLDER, file.filename)
        file.save(filepath)
        
        with open(filepath, 'rb') as f:
            content = f.read().replace(b'\r\n', b'\n')
        with open(filepath, 'wb') as f:
            f.write(content)
            
        os.chmod(filepath, 0o755)  # Ensure the file has execute permissions
        if file.filename.endswith('.sh'):
            return redirect(url_for('insecure.execute_file', filename=file.filename))
        else:
            return f"File {file.filename} uploaded successfully."
    return 'Invalid file type'

@insecure_app.route('/execute_file/<filename>')
def execute_file(filename):
    filepath = os.path.join(UPLOAD_FOLDER, filename)
    if os.path.exists(filepath):
        try:
            # Change working directory to 'uploads' and execute the script
            result = subprocess.check_output(['bash', filename], cwd=UPLOAD_FOLDER, stderr=subprocess.STDOUT)
            return f"<pre>{result.decode()}</pre>"
        except subprocess.CalledProcessError as e:
            return f"Error executing file: {e.output.decode()}"
    return 'File not found'